@model MvcMovie.Models.Movie

@{
    ViewData["Title"] = "Edit";
}
// GET: Movies/Edit/5
 public async Task<IActionResult>
    Edit(int? id)
    {
    if (id == null || _context.Movie == null)
    {
    return NotFound();
    }
    var movie = await _context.Movie.FindAsync(id);
    if (movie == null)
    {
    return NotFound();
    }
    return View(movie);
    }
    [HttpPost]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult>
        Edit(int id,
        [Bind("Id,Title,ReleaseDate,Genre,Price")] Movie movie)
        {
        if (id != movie.Id)
        {
        return NotFound();
        }
        if (ModelState.IsValid)
        {
        try
        {
        _context.Update(movie);
        await _context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
        if (!MovieExists(movie.Id))
        {
        return NotFound();
        }
        else
        {
        throw;
        }
        }
        return RedirectToAction(nameof(Index));
        }
        return View(movie);
        }

        // GET: Movies/Edit/5
        public async Task<IActionResult>
            Edit(int? id)
            {
            if (id == null || _context.Movie == null)
            {
            return NotFound();
            }
            var movie = await _context.Movie.FindAsync(id);
            if (movie == null)
            {
            return NotFound();
            }
            return View(movie);
            }

<h1>Edit</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Genre" class="control-label"></label>
                <input asp-for="Genre" class="form-control" />
                <span asp-validation-for="Genre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
